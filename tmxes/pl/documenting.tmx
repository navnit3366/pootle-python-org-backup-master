<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="Translate Toolkit" creationtoolversion="3.1.1" segtype="sentence" o-tmf="UTF-8" adminlang="en" srclang="en" datatype="PlainText"/>
  <body>
    <tu>
      <tuv xml:lang="en">
        <seg>Building the documentation</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Budowanie dokumentacji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You need to have Python 2.4 or higher installed; the toolset used to build the docs is written in Python.  It is called *Sphinx*, it is not included in this tree, but maintained separately.  Also needed are the docutils, supplying the base markup that Sphinx uses, Jinja, a templating engine, and optionally Pygments, a code highlighter.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Musisz mieć zainstalowany język pytonowski w wersji 2.4 lub wyższej; zestaw narzędziowy używany do budowy dokumentów napisany jest w języku pytonowskim. Zwany jest *Sphinx*, nie jest załączony w tym drzewie, ale utrzymywany osobnol Także potrzebne są docutils, zapewniające bazowe tagi których używa Sphinx, Jinja - maszyna wzorcująca i nieobowiązkowo Pygments, do podświetlania kodu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Using make</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Używanie make</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Luckily, a Makefile has been prepared so that on Unix, provided you have installed Python and Subversion, you can just run ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Szczęśliwie plik Makefile został przygotowany tak, że na Unix-ie zapewniwszy że masz zainstalowany język pytonowski i Subversion, możesz po prostu uruchomić ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>make html</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>make html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>to check out the necessary toolset in the `tools/` subdirectory and build the HTML output files.  To view the generated HTML, point your favorite browser at the top-level index `build/html/index.html` after running "make".</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>aby odpisać konieczne zestawy narzędziowe w podkatalogu `tools/` i zbudować pliki wyjściowe HTML. Aby zobaczyć wygenerowany HTML, wskaż swojej ulubionej przeglądarce głównego poziomu indeks `build/html/index.html` po uruchomieniu "make".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Available make targets are:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dostępne punkty docelowe polecenia make to:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"html", which builds standalone HTML files for offline viewing.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"html", który buduje samodzielne pliki HTML do czytania bez podłączania do internetu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"htmlhelp", which builds HTML files and a HTML Help project file usable to convert them into a single Compiled HTML (.chm) file -- these are popular under Microsoft Windows, but very handy on every platform.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"htmlhelp", który buduje pliki HTML i plik projektu HTML Help ( - z ang. - Pomoc HTML ) - użyteczny do zamiany ich do pojedynczego skompilowanego pliku HTML (.chm) -- te są bardziej popularne w Microsoft Windows, ale także bardzo poręczne na każdej maszynie/środowisku.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>To create the CHM file, you need to run the Microsoft HTML Help Workshop over the generated project (.hhp) file.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Aby utworzyć plik CHM, potrzeba uruchomić skrzynkę narzędziową HTML Help ponad utworzonym plikiem projektu (.hhp).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"latex", which builds LaTeX source files as input to "pdflatex" to produce PDF documents.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"latex", który buduje pliki źródłowe LaTeX jako pliki wejściowe dla polecenia "pdflatex" aby utworzyć dokumenty PDF.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"text", which builds a plain text file for each source file.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"text", które budują czysto tekstowe pliki dla każdego pliku źródłowego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"linkcheck", which checks all external references to see whether they are broken, redirected or malformed, and outputs this information to stdout as well as a plain-text (.txt) file.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"linkcheck", które sprawdza wszystkie zewnętrzne odwołania aby sprawdzić czy nie są błędne, przekierowane lub pomylone, i wypisuje tą informację na standardowe wyjście zarówno jak też do pliku czysto-tekstowego (.txt).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"changes", which builds an overview over all versionadded/versionchanged/ deprecated items in the current version. This is meant as a help for the writer of the "What's New" document.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"changes", który buduje przegląd ponad wszystkimi nowymi w tej wersji/ zmienionymi w tej wersji/ przestarzałymi elementami w obecnej wersji. To jest pomyślane jako pomoc dla piszącego dokument "Co Nowego".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"coverage", which builds a coverage overview for standard library modules and C API.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"coverage", który buduje przegląd pokrycia dla modułów standardowej biblioteki i sprzęgów programowania C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"pydoc-topics", which builds a Python module containing a dictionary with plain text documentation for the labels defined in `tools/sphinxext/pyspecific.py` -- pydoc needs these to show topic and keyword help.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"pydoc-topics", które buduje moduł języka pytonowskiego zawierający słownik z czysto-tekstową dokumentacją dla fiszek określonych w `tools/sphinxext/pyspecific.py` -- pydoc potrzebuje tych do pokazania tematów pomocy i pomocy według słów kluczowych.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A "make update" updates the Subversion checkouts in `tools/`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"make update" uaktualnia wypisy z Subversion w `tools/`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Without make</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Bez make</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You'll need to install the Sphinx package, either by checking it out via ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Potrzebujesz zainstalować pakiet Sphinxa, uzyskując odpis przez ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>svn co http://svn.python.org/projects/external/Sphinx-0.6.5/sphinx tools/sphinx</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>svn co http://svn.python.org/projects/external/Sphinx-0.6.5/sphinx tools/sphinx</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>or by installing it from PyPI.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>lub przez zainstalowanie go z PyPI.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Then, you need to install Docutils, either by checking it out via ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wtedy potrzebujesz Docutils, uzyskując odpis przez ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>svn co http://svn.python.org/projects/external/docutils-0.6/docutils tools/docutils</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>svn co http://svn.python.org/projects/external/docutils-0.6/docutils tools/docutils</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>or by installing it from http://docutils.sf.net/.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>lub instalując go z http://docutils.sf.net/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You also need Jinja2, either by checking it out via ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Potrzebujesz także Jinja2, albo przez odpis przez ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>svn co http://svn.python.org/projects/external/Jinja-2.3.1/jinja2 tools/jinja2</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>svn co http://svn.python.org/projects/external/Jinja-2.3.1/jinja2 tools/jinja2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You can optionally also install Pygments, either as a checkout via ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Możesz także opcjonalnie zainstalować Pygments, albo przez odpis przez ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>svn co http://svn.python.org/projects/external/Pygments-1.3.1/pygments tools/pygments</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>svn co http://svn.python.org/projects/external/Pygments-1.3.1/pygments tools/pygments</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>or from PyPI at http://pypi.python.org/pypi/Pygments.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>albo z PyPI z http://pypi/python.org/pypi/Pygments.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Then, make an output directory, e.g. under `build/`, and run ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Potem tworząc wynikowy katalog, np pod `build/`, i uruchamiając ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>python tools/sphinx-build.py -b&lt;builder&gt; . build/&lt;outputdirectory&gt;</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>python tools/sphinx-build.py -b&lt;builder&gt; . build/&lt;outputdirectory&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>where `&lt;builder&gt;` is one of html, text, latex, or htmlhelp (for explanations see the make targets above).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>gdzie `&lt;builder&gt;` jest jednym z html, text, latex, lub htmlhelp (dla wyjaśnień zobacz punkty docelowe polecenia make powyżej).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Differences to the LaTeX markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Różnice w adnotacjach LaTeX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Though the markup language is different, most of the concepts and markup types of the old LaTeX docs have been kept -- environments as reST directives, inline commands as reST roles and so forth.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Chociaż język adnotacji jest różny, większość koncepcji i typów adnotacji starych dokumentów LaTeX została zachowana -- środowiska jako dyrektywy reST, komendy inline jako role reST itd.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>However, there are some differences in the way these work, partly due to the differences in the markup languages, partly due to improvements in Sphinx.  This section lists these differences, in order to give those familiar with the old format a quick overview of what they might run into.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jednakże, istnieją pewne różnice w sposobie w jaki te działają, po części w zależności od różnic w językach adnotacji, po części w zależności od ulepszeń Sphinxa. Ten rozdział opisuje te różnice, w celu aby dać znającym stary format szybki ogląd tego na co mogą natrafić.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Inline markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>adnotacje "w-jednej-linii" ( - z ang. - inline)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These changes have been made to inline markup:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te zmiany zostały wprowadzone do adnotacji w-jednej-linii:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Cross-reference roles**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**role krzyżowych-odwołań**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Most of the following semantic roles existed previously as inline commands, but didn't do anything except formatting the content as code.  Now, they cross-reference to known targets (some names have also been shortened):</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Większość z następujących ról składniowych istniało przedtem jako polecenia jednej-linii ( - z ang. - inline ), ale nie robiły nic poza formatowaniem treści jako kodu. Teraz one krzyżowo-odwołują się do znanych celów (niektóre nazwy zostały także skrócone):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*mod* (previously *refmodule* or *module*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*mod* (pakiet, moduł - poprzednio *refmodule* lub *module*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*func* (previously *function*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*func* (zadanie poprzednio *function*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*data* (new)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*data* (nowe)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*const*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*const*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*class*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*class*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*meth* (previously *method*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*meth* (sposób postępowania - poprzednio *method*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*attr* (previously *member*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*attr* (właściwość poprzednio członek - z ang. - *member*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*exc* (previously *exception*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*exc* (poprzednio *exception* - z ang. - wyjątek)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*cdata*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*cdata*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*cfunc* (previously *cfunction*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*cfunc* (zadanie c *cfunction*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*cmacro* (previously *csimplemacro*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*cmacro* (makropolecenie poprzednio *csimplemacro* - z ang. - proste makro C)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*ctype*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*ctype*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Also different is the handling of *func* and *meth*: while previously parentheses were added to the callable name (like ``\func{str()}``), they are now appended by the build system -- appending them in the source will result in double parentheses.  This also means that ``:func:`str(object)``` will not work as expected -- use ````str(object)```` instead!</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Także inna jest obsługa *func* i *meth*: podczas gdy pierwotnie nawiasy były dodawane do wywoływanej nazwy (jak ``\func{str()}``), teraz są one dodawane przez system budowania -- dodawanie ich w źródle spowoduje podwójne nawiasy. To także oznacza że ``:func:`str(przedmiot)``` nie zadziała jak oczekiwano -- użyj ````str(przedmiot)```` zamiast tego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Inline commands implemented as directives**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**polecenia w-jednej-linii wypełnione jako dyrektywy**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These were inline commands in LaTeX, but are now directives in reST:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te były poleceniami w-jednej-linii w LaTeX-ie, ale teraz są dyrektywami w reST:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*deprecated*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*przestarzałe* ( - z ang. - *deprecated*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*versionadded*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*wersja_dodana* ( - z ang. - *versionadded*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*versionchanged*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*wersja_zmieniona* ( - z ang. - *versionchanged*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These are used like so::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te są używane jako takie::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. deprecated:: 2.5    Reason of deprecation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. przestarzałe:: 2.5 Powód przedawnienia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Also, no period is appended to the text for *versionadded* and *versionchanged*.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Także nie jest dodawana kropka do tekstu dla *versionadded* i *versionchanged* ( - z ang. - *wersjadodana*, *wersjazmieniona* ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*note*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*uwagi* ( - z ang. - *note*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*warning*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*ostrzeżenia* ( - z ang. - *warning*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. note::     Content of note.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. note:: Treść uwag.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Otherwise changed commands**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**W inny sposób zmienione polecenia**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The *samp* command previously formatted code and added quotation marks around it.  The *samp* role, however, features a new highlighting system just like *file* does:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Polecenie *samp* poprzednio formatowany kod i dodawane znaki cytowania wokół niego. Rola *samp* jednakże wyszczególnia nowy system podświetlania tak jak to dotyczy plików ( - z ang. - *file*) :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``:samp:`open({filename}, {mode})``` results in :samp:`open({filename}, {mode})`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``:samp:`open({filename}, {mode})``` daje w rezultacie :samp:`open({filename}, {mode})` (gdzie samp - z ang. - przykład, filename - nazwa pliku, mode - tryb)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Dropped commands**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Pominięte polecenia**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These were commands in LaTeX, but are not available as roles:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te były poleceniami w LaTeX, ale nie są teraz dostępne jako role:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*bfcode*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*bfcode* - z ang. - kodbf</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*character* (use :samp:`\`\`'c'\`\``)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*character* (użyj :samp:`\`\`'c'\`\``)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*citetitle* (use ```Title &lt;URL&gt;`_``)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*citetitle* (użyj ```Tytuł &lt;adres url&gt;`_``)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*code* (use ````code````)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*code* (użyj ````code````)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*email* (just write the address in body text)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*email* (po prostu napisz adres w treści tekstu)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*filenq*</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*filenq*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*filevar* (use the ``{...}`` highlighting feature of *file*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*filevar* (użyj ``{...}`` własności podświetlania pliku - z ang. - *file*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*programopt*, *longprogramopt* (use *option*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*programopt*, *longprogramopt* (użyj opcji - z ang. - *option*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*ulink* (use ```Title &lt;URL&gt;`_``)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*ulink* (użyj ```Tytuł &lt;adres url&gt;`_``)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*url* (just write the URL in body text)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*url* (po prostu napisz adres url w treści tekstu)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*var* (use ``*var*``)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*var* (użyj ``*var*``)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*infinity*, *plusminus* (use the Unicode character)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*infinity*, *plusminus* (użyj znaku Unicode)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*shortversion*, *version* (use the ``|version|`` and ``|release|`` substitutions)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*shortversion*, *version* (użyj podstawienia ``|version|`` i ``|release|``) </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*emph*, *strong* (use the reST markup)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*emph*, *strong* (użyj adnotacji reST)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Backslash escaping**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Ucieczkowanie skośnikiem**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In reST, a backslash must be escaped in normal text, and in the content of roles.  However, in code literals and literal blocks, it must not be escaped. Example: ``:file:`C:\\Temp\\my.tmp``` vs. ````open("C:\Temp\my.tmp")````.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>W reST, skośnik musi być ucieczkowany w zwykłym tekście, i treści ról. Jednakże, w literałach kodu i blokach literałów, nie musi być ucieczkowany. Na przykład: ``:file:`C:\Temp\my.tmp``` vs. ````open("C:\Temp\my.tmp")````.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Information units</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>jednostki informacji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Information units (*...desc* environments) have been made reST directives. These changes to information units should be noted:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jednostki informacji (środowiska *...desc*) zostały przemianowane dyrektywami reST. Te zmiany do jednostek informacji powinny być odnotowane:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**New names**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Nowe nazwy**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"desc" has been removed from every name.  Additionally, these directives have new names:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"desc" zostało zdjęte z każdej nazwy. Dodatkowo, te dyrektywy mają nowe nazwy:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*cfunction* (previously *cfuncdesc*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*cfunction* (przedtem *cfuncdesc*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*cmacro* (previously *csimplemacrodesc*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*cmacro* (poprzednio *csimplemacrodesc*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*exception* (previously *excdesc*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*exception* (poprzednio *excdesc*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*function* (previously *funcdesc*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*function* (poprzednio *funcdesc*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>*attribute* (previously *memberdesc*)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>*attribute* (poprzednio *memberdesc*)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The *classdesc\** and *excclassdesc* environments have been dropped, the *class* and *exception* directives support classes documented with and without constructor arguments.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>środowiska *classdesc\** i *exclassdesc* zostały pominięte na rzecz dyrektyw *class* i *exception* wspierających klasy udokumentowane z i bez parametrów konstruktora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Multiple objects**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Wielokrotne przedmioty**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The equivalent of the *...line* commands is::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Równoważne polecenie dla *...line* ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: do_foo(bar)               do_bar(baz)     Description of the functions.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: do_foo(bar) do_bar(baz) Opis zadania.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>IOW, just give one signatures per line, at the same indentation level.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>IOW, po prostu daj jedną sygnaturę na linię, na tym samym poziomie wcięcia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Arguments**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Parametry**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There is no *optional* command.  Just give function signatures like they should appear in the output::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nie ma polecenia *optional*. Po prostu dawaj sygnatury zadan tak jak powinny się one pojawić w wyjściu::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: open(filename[, mode[, buffering]])     Description.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: open(filename[, mode[, buffering]])     Description.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Note: markup in the signature is not supported.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zauważ: adnotacje w sygnaturze nie są wspierane</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Indexing**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Indeksowanie**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The *...descni* environments have been dropped.  To mark an information unit as unsuitable for index entry generation, use the *noindex* option like so::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>środowiska *...descni* zostały pominięte. Aby oznaczyć jednostkę informacji jako niezdatną dla generacji wpisu indeksowania, użyj opcji *noindex* jako takiej::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: foo_*    :noindex:     Description.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: foo_*    :noindex:     Opis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**New information units**</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Nowe jednostki informacji**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There are new generic information units: One is called "describe" and can be used to document things that are not covered by the other units::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieją nowe generyczne jednostki informacji: Jedna jest zwana "describe" i może być używana do udokumentowania rzeczy które nie są pokryte przez inne jednostki::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. describe:: a == b     The equals operator.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. describe:: a==b Operator równości.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The others are::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Inne to::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. cmdoption:: -O     Describes a command-line option.  .. envvar:: PYTHONINSPECT     Describes an environment variable.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. cmdoption:: -O Opisuje opcję wiersza polecenia. .. envvar:: PYTHONINSPECT Opisuje zmienną środowiskową.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Structure</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Struktura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The LaTeX docs were split in several toplevel manuals.  Now, all files are part of the same documentation tree, as indicated by the *toctree* directives in the sources (though individual output formats may choose to split them up into parts again).  Every *toctree* directive embeds other files as subdocuments of the current file (this structure is not necessarily mirrored in the filesystem layout).  The toplevel file is :file:`contents.rst`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>dokumenty LaTeX zostały podzielone na kilka podręczników górnego poziomu. Teraz wszystkie pliki są częścią tego samego drzewa dokumentacji, jak pokazano w dyrektywach *toctree* w źródłach (chociaż indywidualne formaty wyjściowe mogą wybrać aby podzielić je na części raz jeszcze). Każda dyrektywa *toctree* zawiera inne pliki jako poddokumenty obecnego pliku (ta struktura nie jest koniecznie odwzorowaniem rozkładu systemu plików). Nadrzędnym plikiem jest :file:`contents.rst`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>However, most of the old directory structure has been kept, with the directories renamed as follows:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jednakże, większość starej struktury katalogów została utrzymana, z katalogami o pozmienianych nazwach w następujący sposób:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`api` -&gt; :file:`c-api`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`api` -&gt; :file:`c-api`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`dist` -&gt; :file:`distutils`, with the single TeX file split up</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`dist` -&gt; :file:`distutils`, z pojedynczym plikiem TeX podzielonym</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`doc` -&gt; :file:`documenting`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`doc` -&gt; :file:`documenting`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`ext` -&gt; :file:`extending`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`ext` -&gt; :file:`extending`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`inst` -&gt; :file:`installing`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`inst` -&gt; :file:`installing`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`lib` -&gt; :file:`library`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`lib` -&gt; :file:`library`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`mac` -&gt; merged into :file:`library`, with :file:`mac/using.tex` moved to :file:`using/mac.rst`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`mac` -&gt; złączone w plik :file:`library`, z :file:`mac/using.tex` przesuniętym do :file:`using/mac.rst`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`ref` -&gt; :file:`reference`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`ref` -&gt; :file:`reference`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:file:`tut` -&gt; :file:`tutorial`, with the single TeX file split up</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:file:`tut` -&gt; :file:`tutorial`, z pojedynczym plikiem TeX podzielonym</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Documenting Python</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dokumentowanie Pythona</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The Python language has a substantial body of documentation, much of it contributed by various authors. The markup used for the Python documentation is `reStructuredText`_, developed by the `docutils`_ project, amended by custom directives and using a toolset named `Sphinx`_ to postprocess the HTML output.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Język pytonowski ma istotny zbiór dokumentacji, większość z której wytworzonej przez różnych autorów. Adnotacje używane w dokumentacji języka pytonowskiego są w formacie `reStructuredText`_ wytworzonym w projekcie `docutils`_, uzupełnionym szczególnymi dyrektywami i używając zestawu narzędziowego zwanego `Sphinx`_ do utrzymania plików wyjściowych HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This document describes the style guide for our documentation as well as the custom reStructuredText markup introduced by Sphinx to support Python documentation and how it should be used.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ten dokument opisuje przewodnik stylu dla tej dokumentacji zarówno jak też szczegóły adnotacji reStructuredText wprowadzonych przez Sphinx-a aby wspierać dokumentację języka pytonowskiego i to jak powinien być użyty. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If you're interested in contributing to Python's documentation, there's no need to write reStructuredText if you're not so inclined; plain text contributions are more than welcome as well.  Send an e-mail to docs@python.org or open an issue on the :ref:`tracker &lt;reporting-bugs&gt;`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli interesujesz się dołożeniem się do dokumentacji języka pytonowskiego nie musisz pisać reStructuredText jeśli nie chcesz; wkład zwykłym tekstem jest więcej niż mile widziany na równi. Wyślij e-mail na docs@python.org lub otwórz temat na :ref:`tracker &lt;reporting-bugs&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Introduction</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wprowadzenie</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Python's documentation has long been considered to be good for a free programming language.  There are a number of reasons for this, the most important being the early commitment of Python's creator, Guido van Rossum, to providing documentation on the language and its libraries, and the continuing involvement of the user community in providing assistance for creating and maintaining documentation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dokumentacja języka pytonowskiego od dawna jest uważana za dobrą dla wolnego języka programowania. Istnieje pewna liczba powodów dla tego stanu rzeczy, z których najważniejszym jest wczesne przekonanie twórcy języka pytonowskiego Guido van Rossum-a, aby dostarczyć dokumentację do języka i jego bibliotek, i niesłabnące zaangażowanie społeczności użytkowników w dostarczaniu wsparcia dla tworzenia i utrzymania dokumentacji.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The involvement of the community takes many forms, from authoring to bug reports to just plain complaining when the documentation could be more complete or easier to use.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zaangażowanie społeczności przybiera różną postać od autorstwa po raporty o błędach skończywszy na skargach gdy dokumentacja mogłaby być bardziej kompletna lub łatwiejsza w użyciu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This document is aimed at authors and potential authors of documentation for Python.  More specifically, it is for people contributing to the standard documentation and developing additional documents using the same tools as the standard documents.  This guide will be less useful for authors using the Python documentation tools for topics other than Python, and less useful still for authors not using the tools at all.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ten dokument jest przeznaczony dla autorów i potencjalnych autorów dokumentacji dla języka pytonowskiego. Bardziej szczegółowo, jest dla ludzi dających wkład do standardowej dokumentacji i wytwarzających dodatkowe dokumenty używając tych samych narzędzi jak standardowe dokumenty. Ten przewodnik będzie mniej użyteczny dla autorów używających narzędzi dokumentacji języka pytonowskiego przy tematach innych niż język pytonowski i mniej użyteczny wciąż dla autorów nie używających narzędzi wcale.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If your interest is in contributing to the Python documentation, but you don't have the time or inclination to learn reStructuredText and the markup structures documented here, there's a welcoming place for you among the Python contributors as well.  Any time you feel that you can clarify existing documentation or provide documentation that's missing, the existing documentation team will gladly work with you to integrate your text, dealing with the markup for you. Please don't let the material in this document stand between the documentation and your desire to help out!</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli twoim zainteresowaniem jest wkład w dokumentację języka pytonowskiego, ale nie masz czasu ani zacięcia uczyć się reStructuredText i struktur adnotacji opisanych tutaj, jest przyjemne miejsce dla ciebie pomiędzy współtwórcami języka pytonowskiego również. Jeśli kiedykolwiek poczujesz, że możesz wyjaśnić istniejącą dokumentację lub dostarczyć dokumentację której brak, zespół opiekujący się istniejącą dokumentacją chętnie będzie pracował z tobą aby zintegrować twój tekst, biorąc adnotacje na siebie. Uprasza się aby materiały w tym dokumencie nie stały pomiędzy dokumentacją a twoją ochotą aby służyć pomocą</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Additional Markup Constructs</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dodatkowe konstrukcje adnotacji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Sphinx adds a lot of new directives and interpreted text roles to standard reST markup.  This section contains the reference material for these facilities. Documentation for "standard" reST constructs is not included here, though they are used in the Python documentation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sphinx dodaje mnóstwo nowych dyrektyw i interpretowanych ról tekstowych do standardowych adnotacji reST. Ten rozdział zawiera podręczny zestaw odniesień do tych spraw. Dokumentacja do "standardowych" konstrukcji reST nie jest tu zamieszczona, chociaż jest używana w dokumentacji języka pytonowskiego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This is just an overview of Sphinx' extended markup capabilities; full coverage can be found in `its own documentation &lt;http://sphinx.pocoo.org/contents.html&gt;`_.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To jest po prostu ogląd rozszerzonych zdolności adnotacji Sphinx'a; pełne pokrycie może być dostępne w jego własnej dokumentacji &lt;http://sphinx.pocoo.org/contents.html&gt;`_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Meta-information markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje informacji pośrednich (-z ang. - meta-)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Identifies the author of the current section.  The argument should include the author's name such that it can be used for presentation (though it isn't) and email address.  The domain name portion of the address should be lower case.  Example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Identyfikuje autora obecnej sekcji. Ten parametr powinien zawierać imię autora takie żeby mogło być używane dla prezentacji (chociaż nie jest) i adres email. Porcja adresu nazwy domeny powinna być pisana małymi literami. Na przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. sectionauthor:: Guido van Rossum &lt;guido@python.org&gt;</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. autor sekcji:: Guido van Rossum &lt;guido@python.org&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Currently, this markup isn't reflected in the output in any way, but it helps keep track of contributions.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Obecnie, te adnotacje nie są odzwierciedlone w wyjściu w żaden sposób, ale to pomaga utrzymać na widoku wkład pracy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Module-specific markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje szczególne dla modułu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The markup described in this section is used to provide information about a module being documented.  Each module should be documented in its own file. Normally this markup appears after the title heading of that file; a typical file might start like this::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje opisane w tym rozdziale są używane aby dostarczyć informacje o tym który moduł jest dokumentowany. Każdy moduł powinien być dokumentowany w swoim własnym pliku. Zwykle te adnotacje pojawiają się po tytule nagłówka tego pliku; typowy plik może zaczynać się następująco::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:mod:`parrot` -- Dead parrot access ===================================  .. module:: parrot    :platform: Unix, Windows    :synopsis: Analyze and reanimate dead parrots. .. moduleauthor:: Eric Cleese &lt;eric@python.invalid&gt; .. moduleauthor:: John Idle &lt;john@python.invalid&gt;</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:mod:`papuga` -- dostęp zdechłej papugi ===================================  .. module:: papuga    :platform: Unix, Windows    :synopsis: Analizuje i reanimuje zdechłe papugi. .. moduleauthor:: Eric Cleese &lt;eric@python.invalid&gt; .. moduleauthor:: John Idle &lt;john@python.invalid&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>As you can see, the module-specific markup consists of two directives, the ``module`` directive and the ``moduleauthor`` directive.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jak można zauważyć, szczególne dla modułu adnotacje składają się z dwóch dyrektyw: ``module`` i ``moduleauthor``</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive marks the beginning of the description of a module, package, or submodule. The name should be fully qualified (i.e. including the package name for submodules).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa zaznacza początek opisu modułu, pakietu lub podmodułu. Nazwa powinna być w pełni kwalifikowana (zawierająca nazwę pakietu dla podmodułów).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``platform`` option, if present, is a comma-separated list of the platforms on which the module is available (if it is available on all platforms, the option should be omitted).  The keys are short identifiers; examples that are in use include "IRIX", "Mac", "Windows", and "Unix".  It is important to use a key which has already been used when applicable.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opcja ``maszyna/środowisko`` - z ang. -``platform`` jeśli obecna, jest rozdzieloną przecinkami listą maszyn/środowisk na których moduł jest dostępny (jeśli jest dostępny na wszystkich platformach, opcja powinna zostać pominięta). Klucze są krótkimi identyfikatorami; przykłady które są w użyciu obejmują "IRIX", "Mac", "Windows", i "Unix". Istotne jest użycie klucza, który już był używany tam gdzie jest to stosowne.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``synopsis`` option should consist of one sentence describing the module's purpose -- it is currently only used in the Global Module Index.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opcja ``synopsis`` powinna składać się z jednego zdania opisującego cel modułu -- jest ona obecnie tylko używana w Globalnym Indeksie Modułów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``deprecated`` option can be given (with no value) to mark a module as deprecated; it will be designated as such in various locations then.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opcja ``przedawniony`` - z ang. - ``deprecated`` może być podany (bez wartości) aby oznaczyć moduł jako przedawniony; będzie on określony jako taki w różnych miejscach wtedy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``moduleauthor`` directive, which can appear multiple times, names the authors of the module code, just like ``sectionauthor`` names the author(s) of a piece of documentation.  It too does not result in any output currently.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywa ``autormodułu`` - z ang. - ``moduleauthor``, która może pojawić się wielokrotnie, wymienia imię i nazwisko autorów kodu modułu, tak jak ``sectionauthor`` - z ang. - ``autorsekcji`` wymienia nazwisko i imię autora części dokumentacji. To także nie wpływa na żaden wynik obecnie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>It is important to make the section title of a module-describing file meaningful since that value will be inserted in the table-of-contents trees in overview files.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To jest istotne aby uczynić nagłówek sekcji pliku opisującego moduł zrozumiałym gdyż ta wartość będzie włożona w drzewa spisu treści w plikach przeglądu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There are a number of directives used to describe specific features provided by modules.  Each directive requires one or more signatures to provide basic information about what is being described, and the content should be the description.  The basic version makes entries in the general index; if no index entry is desired, you can give the directive option flag ``:noindex:``.  The following example shows all of the features of this directive type::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieje pewna ilość dyrektyw używanych do opisania szczególnych właściwości dostarczanych przez moduły. Każda dyrektywa wymaga jednej lub więcej sygnatury aby zapewnić podstawowe informacje o tym co jest opisywane, i treść powinna być zgodna z tym opisem. Podstawowa wersja oznacza wpisy w głównym indeksie; jeśli żaden wpis w indeksie nie jest oczekiwany, można pozostawić flagę opcji dyrektywy ``:noindex:``. Następujący przykład pokazuje wszystkie właściwości tego rodzaju dyrektywy::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: spam(eggs)               ham(eggs)    :noindex:     Spam or ham the foo.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: spam(jajka)               szynka(jajka)    :noindex:     Spam lub szynka foo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The signatures of object methods or data attributes should always include the type name (``.. method:: FileInput.input(...)``), even if it is obvious from the context which type they belong to; this is to enable consistent cross-references.  If you describe methods belonging to an abstract protocol, such as "context managers", include a (pseudo-)type name too to make the index entries more informative.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sygnatury sposobów postępowania przedmiotów lub właściwości danych powinny zawsze zawierać nazwę typu (``.. method:: FileInput.input(...)``), nawet jeśli wynika to w sposób oczywisty z kontekstu do jakiego typu należy; to służy umożliwieniu spójnego krzyżowego-odwoływania się. Jeśli opisujesz sposoby postępowania należące do protokołu abstrakcyjnego, takiego jak "zarządca kontekstu", włączaj nazwę (pseudo-)typu także aby uczynić wpisy indeksowe takimi aby niosły ze sobą bardziej znaczącą informację.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The directives are:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywami są:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a C function. The signature should be given as in C, e.g.::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje zadanie C. Sygnatura powinna być dana jak w C np.::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. cfunction:: PyObject* PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. cfunction:: PyObject* PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This is also used to describe function-like preprocessor macros.  The names of the arguments should be given so they may be used in the description.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To jest także używane aby opisywać podobne do zadań makra preprocesora. Nazwy parametrów powinny być dane tak aby mogły być używane w opisie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Note that you don't have to backslash-escape asterisks in the signature, as it is not parsed by the reST inliner.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zauważ że nie musisz wstawiać znaku ukośnika ucieczkującego znak gwiazdki w sygnaturze, jako że nie jest ona wczytywana przez dyrektywę jedno-liniową reST.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a C struct member. Example signature::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje członka struktury C. Przykładowa sygnatura::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. cmember:: PyObject* PyTypeObject.tp_bases</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. cmember:: PyObject* PyTypeObject.tp_bases</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The text of the description should include the range of values allowed, how the value should be interpreted, and whether the value can be changed. References to structure members in text should use the ``member`` role.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Tekst opisu powinien zawierać zakres wartości dozwolonych, jak wartość powinna być interpretowana, i czy wartość może być zmieniona. Odwołania do członków struktury powinny używać roli ``członka`` - z ang. - ``member``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a "simple" C macro.  Simple macros are macros which are used for code expansion, but which do not take arguments so cannot be described as functions.  This is not to be used for simple constant definitions.  Examples of its use in the Python documentation include :cmacro:`PyObject_HEAD` and :cmacro:`Py_BEGIN_ALLOW_THREADS`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje "proste" makropolecenie C. Proste makropolecenia są makropoleceniami które są używane do rozwijania kodu, ale nie przyjmują parametrów więc nie mogą być opisywane jako zadania. To jest nie po to aby określać proste definicje. Przykładami użycia w dokumentacji języka pytonowskiego zawierają :cmacro:`PyObject_HEAD` i :cmacro:`PyBEGIN_ALLOW_THREADS`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a C type. The signature should just be the type name.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje typ C. Sygnatura powinna być tylko nazwą typu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a global C variable.  The signature should include the type, such as::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje nadrzędnego poziomu zmienną C. Sygnatura powinna zawierać typ tak jak::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. cvar:: PyObject* PyClass_Type</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. cvar:: PyObject* PyClass_Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes global data in a module, including both variables and values used as "defined constants."  Class and object attributes are not documented using this environment.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje nadrzędne dane w module, zawierając zarówno zmienne jak i wartości używane jako "zdefiniowane stałe." Właściwości przedmiotu i uogólnienia nie są udokumentowane przy użyciu tego środowiska.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes an exception class.  The signature can, but need not include parentheses with constructor arguments.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje uogólnienie wyjątku. Sygnatura może, ale nie musi zawierać nawiasów z parametrami konstruktora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a module-level function.  The signature should include the parameters, enclosing optional parameters in brackets.  Default values can be given if it enhances clarity.  For example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje zadanie na poziomie modułu. Sygnatura powinna zawierać parametry, zamykać ponad-obowiązkowe parametry w nawiasach. Domyślne wartości mogą być podane jeśli to pomaga w jasności. Na przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: Timer.repeat([repeat=3[, number=1000000]])</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: Timer.repeat([repeat=3[, number=1000000]])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Object methods are not documented using this directive. Bound object methods placed in the module namespace as part of the public interface of the module are documented using this, as they are equivalent to normal functions for most purposes.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sposoby postępowania przedmiotów nie są udokumentowane używając tej dyrektywy. Związane sposoby postępowania przedmiotów umieszczone w przestrzeni nazw modułu jako część sprzęgu publicznego modułu są dokumentowane używając tego, jako że są równoważne ze zwykłymi zadaniami dla większości celów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The description should include information about the parameters required and how they are used (especially whether mutable objects passed as parameters are modified), side effects, and possible exceptions.  A small example may be provided.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opis powinien zawierać informacje o parametrach wymaganych i jak powinny być używane (szczególnie czy zmienialne przedmioty przekazywane jako parametry są modyfikowane), efekty uboczne i możliwe wyjątki. Mały przykład może być dostarczony.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a class.  The signature can include parentheses with parameters which will be shown as the constructor arguments.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje uogólnienie. Sygnatura powinna zawierać nawiasy z parametrami które będą pokazane jako parametry konstruktora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes an object data attribute.  The description should include information about the type of the data to be expected and whether it may be changed directly.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje właściwość danych obiektu. Opis powinien zawierać informacje o rodzaju danych które są oczekiwane i czy mogą być zmieniane bezpośrednio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes an object method.  The parameters should not include the ``self`` parameter.  The description should include similar information to that described for ``function``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje sposób postępowania obiektu. Parametry nie powinny zawierać parametru ``self`` - z ang. - ``sam``. Opis powinien zawierać podobne informacje do tych opisanych dla ``zadania`` - z ang. - ``function``. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a Python :term:`bytecode` instruction.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje instrukcje kodu kęsowego języka pytonowskiego - z ang. - :term:`bytecode`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes a command line option or switch.  Option argument names should be enclosed in angle brackets.  Example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje opcję wiersza polecenia lub przełącznik. Nazwy parametrów opcji powinny być otoczone nawiasami klamrowymi. Przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. cmdoption:: -m &lt;module&gt;     Run a module as a script.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. cmdoption:: -m &lt;module&gt; Uruchom moduł jako skrypt.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Describes an environment variable that Python uses or defines.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opisuje zmienną środowiskową którą język pytonowski używa lub definiuje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There is also a generic version of these directives:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieje także generyczna wersja tych dyrektyw:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive produces the same formatting as the specific ones explained above but does not create index entries or cross-referencing targets.  It is used, for example, to describe the directives in this document. Example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa produkuje to samo formatowanie jak te szczególne określone powyżej ale nie tworzy wpisów indeksu ani celów krzyżowych-odniesień. Jest używana, dla przykładu, aby opisać dyrektywy w tym dokumencie. Na przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. describe:: opcode     Describes a Python bytecode instruction.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. describe:: opcode Opisuje instrukcję języka pytonowskiego kęso-kodową.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Showing code examples</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Pokazywanie przykładów kodu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Examples of Python source code or interactive sessions are represented using standard reST literal blocks.  They are started by a ``::`` at the end of the preceding paragraph and delimited by indentation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przykłady kodu źródłowego języka pytonowskiego lub sesji współpracy użytkownika w środowisku są reprezentowane używając bloków literalnych reST. Zaczynają się od ``::`` na końcu poprzedniego paragrafu i kończą się przez wcięcie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Representing an interactive session requires including the prompts and output along with the Python code.  No special markup is required for interactive sessions.  After the last line of input or output presented, there should not be an "unused" primary prompt; this is an example of what *not* to do::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Reprezentowanie sesji współpracy użytkownika z programem w środowisku wymaga zawarcia zapytań i wyników razem z kodem języka pytonowskiego. Żadne specjalne adnotacje nie są wymagane dla sesji użytkownika w środowisku interpretowanym. Po ostatniej linii wprowadzania lub wyjścia która jest obecna, nie powinno pozostać "nieużywane" podstawowe zapytanie; to jest przykład tego czego *nie* robić::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>&gt;&gt;&gt; 1 + 1 2 &gt;&gt;&gt;</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>&gt;&gt;&gt; 1 + 1 2 &gt;&gt;&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Syntax highlighting is handled in a smart way:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Podświetlenie składni jest obsługiwane w sprytny sposób:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There is a "highlighting language" for each source file.  Per default, this is ``'python'`` as the majority of files will have to highlight Python snippets.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieje "język podświetleń" dla każdego pliku źródłowego. Domyślnie jest to ``'python'`` jako że większość plików będzie musiało podświetlać urywki języka pytonowskiego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Within Python highlighting mode, interactive sessions are recognized automatically and highlighted appropriately.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wewnątrz trybu podświetlania języka pytonowskiego, sesje współpracy użytkownika ze środowiskiem programu są rozpoznawane automatycznie i podświetlane odpowiednio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The highlighting language can be changed using the ``highlightlang`` directive, used as follows::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Język podświetleń może być zmieniany używając dyrektywy ``highlightlang``, używanej jak następuje::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. highlightlang:: c</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. highlightlang:: c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This language is used until the next ``highlightlang`` directive is encountered.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ten język jest używany dopóki następna dyrektywa ``highlightlang`` nie zostanie napotkana.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The values normally used for the highlighting language are:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wartości zwykle używane dla języków podświetlania to:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``python`` (the default)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``python`` (domyślnie)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``c``</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``c``</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``rest``</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``rest``</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``none`` (no highlighting)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``none`` (bez podświetlania)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If highlighting with the current language fails, the block is not highlighted in any way.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli podświetlanie w obecnym języku zawiedzie, blok nie będzie podświetlany w żaden sposób.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Longer displays of verbatim text may be included by storing the example text in an external file containing only plain text.  The file may be included using the ``literalinclude`` directive. [1]_ For example, to include the Python source file :file:`example.py`, use::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dłuższe obecności tekstu słowo-w-słowo mogą być zawierane przez przechowanie przykładowego tekstu w pliku zewnętrznym zawierającym tylko czysty tekst. Plik może być zawarty używając dyrektywy ``literalinclude``. [1]_ Dla przykładu, aby zawrzeć plik źródłowy języka pytonowskiego :file:`example.py`, użyj::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. literalinclude:: example.py</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. literalinclude:: example.py</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The file name is relative to the current file's path.  Documentation-specific include files should be placed in the ``Doc/includes`` subdirectory.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta nazwa pliku jest względna do ścieżki dostępu do obecnego pliku. Pliki załączane szczególne dla dokumentacji powinny być umieszczane w podkatalogu ``Doc/includes``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>As said before, Sphinx uses interpreted text roles to insert semantic markup in documents.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jak powiedziano wcześniej, Sphinx używa interpretowanych ról tekstowych aby wstawić składniowe adnotacje do dokumentów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Names of local variables, such as function/method arguments, are an exception, they should be marked simply with ``*var*``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwy zmiennych lokalnych, takie jak parametry zadania/sposobu postępowania są wyjątkiem, powinny być oznaczone po prostu za pomocą ``*var*``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For all other roles, you have to write ``:rolename:`content```.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla wszystkich innych ról, trzeba pisać ``:nazwa_roli:`treść```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There are some additional facilities that make cross-referencing roles more versatile:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieją pewne dodatkowe urządzenia które czynią krzyżowo-odnoszące się role bardziej wszechstronne:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You may supply an explicit title and reference target, like in reST direct hyperlinks: ``:role:`title &lt;target&gt;``` will refer to *target*, but the link text will be *title*.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Możesz dostarczyć jawny nagłówek i cel odnośnika, jak w bezpośrednich łączach reST: ``:role:`tytuł &lt;cel&gt;``` będzie odnosiło się do do *celu*, ale tekstem linku będzie *tytuł*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If you prefix the content with ``!``, no reference/hyperlink will be created.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli poprzedzisz treść za pomocą ``!``, nie zostanie utworzony żadne odniesienie/hiperłącze.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For the Python object roles, if you prefix the content with ``~``, the link text will only be the last component of the target.  For example, ``:meth:`~Queue.Queue.get``` will refer to ``Queue.Queue.get`` but only display ``get`` as the link text.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla ról przedmiotów, jeśli poprzedzisz treść za pomocą ``~``, tekst łącza będzie tylko ostatnim komponentem celu. Dla przykładu, ``:meth:`~Queue.Queue.get``` będzie odnosić się do ``Queue.Queue.get`` ale będzie wyświetlać tylko ``get`` jako tekst łącza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In HTML output, the link's ``title`` attribute (that is e.g. shown as a tool-tip on mouse-hover) will always be the full target name.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>W wyjściu HTML, atrybut ``title`` łącza (to jest np. pokazywane jako podpowiedź przy najechaniu kursorem myszy) będzie zawsze pełną nazwą celu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following roles refer to objects in modules and are possibly hyperlinked if a matching identifier is found:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następujące role odnoszą się do przedmiotów w modułach i są możliwie połączone hiperłączami jeśli pasujący identyfikator zostanie znaleziony:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a module; a dotted name may be used.  This should also be used for package names.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa modułu; nazwa przedzielona kropkami może być użyta. To powinno także być użyte dla nazw pakietów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a Python function; dotted names may be used.  The role text should not include trailing parentheses to enhance readability.  The parentheses are stripped when searching for identifiers.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zadania pytonowskiego; nazwy przedzielone kropkami mogą być użyte. Tekst roli nie powinien zawierać kończących nawiasów aby wspomóc czytelność. Nawiasy są zdejmowane gdy poszukiwane są identyfikatory.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a module-level variable or constant.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zmiennej lub stałej na poziomie modułu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a "defined" constant.  This may be a C-language ``#define`` or a Python variable that is not intended to be changed.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa "zdefiniowanej" stałej. Może być w języku C ``#define`` lub być zmienną języka pytonowskiego, która jest przeznaczona do pozostania bez zmian.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A class name; a dotted name may be used.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa uogólnienia; nazwa rozdzielona kropkami może być użyta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a method of an object.  The role text should include the type name and the method name.  A dotted name may be used.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa sposobu postępowania należącego do przedmiotu. Tekst roli powinien zawierać nazwę typu przedmiotu i nazwę sposobu postępowania. Nazwa przedzielona kropkami może zostać użyta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a data attribute of an object.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa właściwości danych przedmiotu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of an exception. A dotted name may be used.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa wyjątku. Przedzielona kropkami nazwa może być użyta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name enclosed in this markup can include a module name and/or a class name. For example, ``:func:`filter``` could refer to a function named ``filter`` in the current module, or the built-in function of that name.  In contrast, ``:func:`foo.filter``` clearly refers to the ``filter`` function in the ``foo`` module.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zawarta w tej adnotacji może zawierać nazwę modułu i/lub nazwę uogólnienia. Dla przykładu, ``:func:`filtr``` może odnosić się do zadania nazwanego ``filtr`` w obecnym module, lub wbudowanego zadania o tej samej nazwie. W przeciwieństwie, ``:func:`foo.filtr``` jasno odnosi się do zadania ``filtr`` modułu ``foo``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Normally, names in these roles are searched first without any further qualification, then with the current module name prepended, then with the current module and class name (if any) prepended.  If you prefix the name with a dot, this order is reversed.  For example, in the documentation of the :mod:`codecs` module, ``:func:`open``` always refers to the built-in function, while ``:func:`.open``` refers to :func:`codecs.open`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Typowo, nazwy w tych rolach są przeszukiwane najpierw bez żadnej dalszej kwalifikacji, potem z przedrostkiem nazwy obecnego modułu dołożonym z przodu, potem z przedrostkiem nazwy modułu i uogólnienia (jeśli jakiegokolwiek) doklejonym z przodu. Jeśli dołożysz przedrostek w postaci kropki, ten porządek jest odwracany. Dla przykładu w dokumentacji modułu :mod:`codecs`, ``:func:`open``` zawsze odnosi się do wbudowanego zadania, podczas gdy ``:func:`.open``` odnosi się do :func:`codecs.open`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A similar heuristic is used to determine whether the name is an attribute of the currently documented class.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Podobne szacowanie jest używane aby określić czy nazwa jest atrybutem obecnie dokumentowanego uogólnienia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following roles create cross-references to C-language constructs if they are defined in the API documentation:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następujące role tworzą krzyżowe odniesienia do konstrukcji z języka C jeśli są definiowane w dokumentacji sprzęgów (z ang. - API):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a C-language variable.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zmiennej z języka-C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a C-language function. Should include trailing parentheses.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zadania z języka-C. Powinna zawierać kończące znaki nawiasów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a "simple" C macro, as defined above.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa "prostego" makropolecenia z języka-C jak zdefiniowano powyżej.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a C-language type.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa typu z języka-C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following role does possibly create a cross-reference, but does not refer to objects:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następująca rola możliwie tworzy krzyżowe-odniesienie, ale nie odnosi się do przedmiotów:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a grammar token (used in the reference manual to create links between production displays).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa elementu gramatycznego (używana w podręczniku odniesień aby tworzyć połączenia pomiędzy pokazami produkcji).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following role creates a cross-reference to the term in the glossary:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następująca rola tworzy krzyżowe-odniesienie do terminu w słowniczku:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Reference to a term in the glossary.  The glossary is created using the ``glossary`` directive containing a definition list with terms and definitions.  It does not have to be in the same file as the ``term`` markup, in fact, by default the Python docs have one global glossary in the ``glossary.rst`` file.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Odniesienie do terminu w słowniczku. Słowniczek jest tworzony używając dyrektywy ``glossary`` zawierającej listę definicji z terminami i definicjami. Nie musi być w tym samym pliku co adnotacja ``term``, w rzeczywistości domyślne dokumenty języka pytonowskiego mają jeden nadrzędny słowniczek w pliku ``glossary.rst``. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If you use a term that's not explained in a glossary, you'll get a warning during build.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli używasz terminu który nie jest wyjaśniony w słowniczku, otrzymasz ostrzeżenie w czasie budowy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following roles don't do anything special except formatting the text in a different style:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następujące role nie robią nic szczególnego oprócz formatowania tekstu w odmienny sposób:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of an OS-level command, such as ``rm``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa z poziomu systemu operacyjnego, polecenia takiego, jak ``rm``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Mark the defining instance of a term in the text.  (No index entries are generated.)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zaznacz definiujące wystąpienie terminu w tekście. (Nie są generowane żadne wpisy indeksu.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>An environment variable.  Index entries are generated.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zmienna środowiskowa. Wpisy indeksu są generowane.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a file or directory.  Within the contents, you can use curly braces to indicate a "variable" part, for example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa pliku lub katalogu. Wewnątrz treści, możesz użyć nawiasów klamrowych aby zaznaczyć część "zmienną", na przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>... is installed in :file:`/usr/lib/python2.{x}/site-packages` ...</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>... jest zainstalowane w :file:`/usr/lib/python2.{x}/site-packages` ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In the built documentation, the ``x`` will be displayed differently to indicate that it is to be replaced by the Python minor version.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>W zbudowanej dokumentacji, ``x`` będzie pokazane inaczej aby zaznaczyć że ma być zamienione przez podrzędny numer wersji języka pytonowskiego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Labels presented as part of an interactive user interface should be marked using ``guilabel``.  This includes labels from text-based interfaces such as those created using :mod:`curses` or other text-based libraries.  Any label used in the interface should be marked with this role, including button labels, window titles, field names, menu and menu selection names, and even values in selection lists.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Fiszki prezentowane jako część współdziałającego z użytkownikiem graficznego sprzęgu użytkownika powinny być oznaczone używając ``guilabel``. To zawiera fiszki z opartych o teksty sprzęgów użytkownika takich jak te tworzone przy użyciu biblioteki :mod:`curses` lub innych bibliotek opartych o tekst. Jakikolwiek nagłówek (fiszka) użyty w sprzęgu użytkownika powinien być oznaczony tą rolą, zawierając nagłówki przycisków, nagłówki okien, nazwy pól, menu i nazwy wyborów menu, i nawet wartości w listach wyboru.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Mark a sequence of keystrokes.  What form the key sequence takes may depend on platform- or application-specific conventions.  When there are no relevant conventions, the names of modifier keys should be spelled out, to improve accessibility for new users and non-native speakers.  For example, an *xemacs* key sequence may be marked like ``:kbd:`C-x C-f```, but without reference to a specific application or platform, the same sequence should be marked as ``:kbd:`Control-x Control-f```.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Oznacz sekwencję naciśnięć przycisków. Jaką formę sekwencje przycisków przyjmują może zależeć od konwencji zależnej od środowiska/maszyny lub konkretnej aplikacji. Gdy nie ma istotnych konwencji, nazwy przycisków modyfikatorów powinny być przeliterowane aby poprawić dostępność dla nowych użytkowników i nie-znających-języka-jako-ojczystego. Dla przykładu, *xemacs* sekwencja przycisków może być oznaczona jako ``:kbd:`C-x C-f```, ale bez odniesienia do szczególnej aplikacji czy maszyny/środowiska, ta sama sekwencja powinna zostać oznaczona jako ``:kbd:`Control-x Control-f```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a keyword in Python.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa słowa kluczowego w języku pytonowskim.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of an RFC 822-style mail header.  This markup does not imply that the header is being used in an email message, but can be used to refer to any header of the same "style."  This is also used for headers defined by the various MIME specifications.  The header name should be entered in the same way it would normally be found in practice, with the camel-casing conventions being preferred where there is more than one common usage. For example: ``:mailheader:`Content-Type```.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa nagłówka poczty w stylu RFC 822. Ta adnotacja nie oznacza że nagłówek który jest używany jest wiadomością e-mail, ale może być użyta aby odwołać się do jakichkolwiek nagłówków tego samego "stylu." To jest także używane dla nagłówków zdefiniowanych przez różne specyfikacje MIME. Nazwa nagłówka powinna być wstawiana w ten sam sposób jak byłaby zwykle znajdowana w praktyce, z konwencjami obudowy-wielbłądziej będącymi preferowanymi tam gdzie jest więcej niż jedno użycie. Na przykład: ``:mailheader:`Typ-Treści```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a :command:`make` variable.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zmiennej polecenia :command:`make`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A reference to a Unix manual page including the section, e.g. ``:manpage:`ls(1)```.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Odniesienie do strony podręcznika Unix-a zawierające sekcję, np. ``:manpage:`Is(1)```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Menu selections should be marked using the ``menuselection`` role.  This is used to mark a complete sequence of menu selections, including selecting submenus and choosing a specific operation, or any subsequence of such a sequence.  The names of individual selections should be separated by ``--&gt;``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wybory menu powinny być oznaczone przy użyciu roli ``menuselection``. To jest używane do określenia pełnych sekwencji wyborów menu, zawierających wybory podmenu, i wybór szczególnej operacji, lub jakiekolwiek podsekwencje takiej sekwencji. Nazwy indywidualnych wyborów powinny być rozdzielone za pomocą ``--&gt;``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For example, to mark the selection "Start &gt; Programs", use this markup::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla przykładu, aby zaznaczyć wybór "Start &gt; Programy", użyj adnotacji::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>:menuselection:`Start --&gt; Programs`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>:menuselection:`Start --&gt; Programy`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>When including a selection that includes some trailing indicator, such as the ellipsis some operating systems use to indicate that the command opens a dialog, the indicator should be omitted from the selection name.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Gdy włączasz wybór który zawiera pewne wskazania końcowe, takie jak elipsa niektóre systemy operacyjne używają tego aby oznaczyć że polecenie otwiera dialog, owe wskazanie powinno zostać pominięte z wybranej nazwy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a MIME type, or a component of a MIME type (the major or minor portion, taken alone).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa typu MIME, lub składnika typu MIME (większej lub mniejszej części, branej pojedynczo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a Usenet newsgroup.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa grupy dyskusyjnej Usenetu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A command-line option to an executable program.  The leading hyphen(s) must be included.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Opcja wiersza-poleceń dla programu wykonywalnego. wiodący myślnik(i) musi być załączony.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of an executable program.  This may differ from the file name for the executable for some platforms.  In particular, the ``.exe`` (or other) extension should be omitted for Windows programs.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa programu wykonywalnego. To może się różnić od nazwy pliku dla programu wykonywalnego na niektórych maszynach/środowiskach. w szczególności, ``.exe`` (lub inne) rozszerzenia powinny być  pominięte dla programów Windowsowskich.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A regular expression. Quotes should not be included.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wyrażenie regularne. Znaki cytowania nie powinny być załączane.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A piece of literal text, such as code.  Within the contents, you can use curly braces to indicate a "variable" part, as in ``:file:``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Kawałek literalnego tekstu, taki jak kod. Wewnątrz treści, możesz użyć nawiasów klamrowych, aby oznaczyć "zmienną" część, jak w ``:file:``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If you don't need the "variable part" indication, use the standard ````code```` instead.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli nie potrzebujesz wskazywać "zmiennej części", użyj standardowego ````kodu```` w zamian za to.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A Python or C variable or parameter name.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa parametru lub zmiennej z języka pytonowskiego lub języka-C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following roles generate external links:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następujące role tworzą zewnętrzne połączenia:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A reference to a Python Enhancement Proposal.  This generates appropriate index entries. The text "PEP *number*\ " is generated; in the HTML output, this text is a hyperlink to an online copy of the specified PEP.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Odniesienie do propozycji ulepszenia języka pytonowskiego ( - z ang. - Python Enhancement Proposal - w skrócie PEP). To wytwarza właściwe wpisy indeksu. Tekst "PEP *numer*\ " jest tworzony, w wyjściu HTML, ten tekst jest hiperłączem do sieciowej kopii wyszczególnionego PEP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A reference to an Internet Request for Comments.  This generates appropriate index entries. The text "RFC *number*\ " is generated; in the HTML output, this text is a hyperlink to an online copy of the specified RFC.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Odniesienie do Internetowego dokumentu prośby o skomentowanie ( - z ang. - Request for Comments - w skrócie RFC). To generuje właściwy wpisy indeksu. Tekst "RFC *numer*\ " jest tworzony; w wyjściu HTML, ten tekst jest hiperłączem do sieciowej kopii wyszczególnionego RFC.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Note that there are no special roles for including hyperlinks as you can use the standard reST markup for that purpose.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zauważ że nie ma szczególnych ról dla zawarcia hiperłączy jako że możesz użyć standardowych adnotacji reST dla tego celu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Cross-linking markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>adnotacje łącz-krzyżowych</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>To support cross-referencing to arbitrary sections in the documentation, the standard reST labels are "abused" a bit: Every label must precede a section title; and every label name must be unique throughout the entire documentation source.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Aby wspierać krzyżowe-odniesienia do określonych sekcji w dokumentacji, standardowe nagłówki reST są nieco "nadużywane": Każdy nagłówek musi być unikatowy w całym źródle dokumentacji.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You can then reference to these sections using the ``:ref:`label-name``` role.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Możesz potem odnieść się do tych sekcji używając roli ``:ref:`label-name```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. _my-reference-label:  Section to cross-reference --------------------------  This is the text of the section.  It refers to the section itself, see :ref:`my-reference-label`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. _mój-nagłówek-odniesienia: Sekcja od odniesień-krzyżowych --------------------- To jest tekst sekcji. Odnosi się on do tej samej sekcji, zobacz :ref:`mój-nagłówek-odniesienia`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``:ref:`` invocation is replaced with the section title.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zawezwanie ``:ref:`` jest podmieniane przez tytuł sekcji.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Paragraph-level markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje na poziomie-paragrafu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These directives create short paragraphs and can be used inside information units as well as normal text:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te dyrektywy tworzą krótkie paragrafy i mogą być używane wewnątrz jednostek informacji jak również jako zwykły tekst:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>An especially important bit of information about an API that a user should be aware of when using whatever bit of API the note pertains to.  The content of the directive should be written in complete sentences and include all appropriate punctuation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Szczególnie istotny kawałek informacji o sprzęgu programowania o którym użytkownik powinien wiedzieć gdy używany będzie jakikolwiek kawałek sprzęgu do którego odnosi się notatka. Zawartość dyrektywy powinna być zapisana całymi zdaniami i zawierać wszystkie właściwe znaki przestankowe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. note::     This function is not suitable for sending spam e-mails.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. note:: To zadanie nie jest właściwe dla wysyłania e-maili spamowych.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>An important bit of information about an API that a user should be aware of when using whatever bit of API the warning pertains to.  The content of the directive should be written in complete sentences and include all appropriate punctuation.  In the interest of not scaring users away from pages filled with warnings, this directive should only be chosen over ``note`` for information regarding the possibility of crashes, data loss, or security implications.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istotna część informacji o sprzęgu programowania aplikacji (w skrócie z ang. - API) o której użytkownik powinien wiedzieć gdy zamierza użyć jakiegokolwiek fragmentu sprzęgu programowania aplikacji do którego ostrzeżenie się odnosi. Treść dyrektywy powinna być napisana pełnymi zdaniami i zawierać wszystkie właściwe znaki przestankowe. W interesie aby nie odstraszyć użytkowników od stron zapełnionych ostrzeżeniami, dyrektywa powinna tylko być wybrana zamiast ``notatki`` dla informacji odnoszących się do możliwości błędów, utraty danych, lub względów bezpieczeństwa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive documents the version of Python which added the described feature to the library or C API. When this applies to an entire module, it should be placed at the top of the module section before any prose.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa dokumentuje wersję języka pytonowskiego, która dodała opisywaną własność do biblioteki lub sprzęgu C. Gdy to odnosi się do całego modułu, to powinno być umieszczone na górze sekcji modułu przed jakąkolwiek prozą.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The first argument must be given and is the version in question; you can add a second argument consisting of a *brief* explanation of the change.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Pierwszy parametr musi zostać podany i jest wersją o którą pytano; można dodać drugi parametr składający się z *krótkiego* wyjaśnienia zmian.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. versionadded:: 3.1    The *spam* parameter.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. versionadded:: 3.1    parametr *spam*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Note that there must be no blank line between the directive head and the explanation; this is to make these blocks visually continuous in the markup.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zauważ że nie może być linii pustych pomiędzy nagłówkiem dyrektywy i wyjaśnieniem; to jest po to by uczynić te bloki wizualnie jednym ciągiem w adnotacjach.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Similar to ``versionadded``, but describes when and what changed in the named feature in some way (new parameters, changed side effects, etc.).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Podobne do ``versionadded``, ale opisuje kiedy i co zmieniło się w nazwanej właściwości w pewien sposób (nowe parametry, zmienione efekty uboczne, itp.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive is used to mark CPython-specific information.  Use either with a block content or a single sentence as an argument, i.e. either ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa jest używana do oznaczenia informacji szczególnej dla CPythona. Używaj albo z zawartością bloku lub pojedynczym zdaniem jako parametrem t.j. albo ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. impl-detail::     This describes some implementation detail.     More explanation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. impl-detail:: To opisuje pewien szczegół wypełnienia zadania. Więcej wyjaśnień.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>or ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>lub ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. impl-detail:: This shortly mentions an implementation detail.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. impl-detail:: To krótko wspomina jakiś szczegół wypełnienia zadania.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"\ **CPython implementation detail:**\ " is automatically prepended to the content.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"\ **Szczegół wypełnienia zadania CPyton:**\ " jest automatycznie dołączany do treści.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Many sections include a list of references to module documentation or external documents.  These lists are created using the ``seealso`` directive.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wiele sekcji zawiera listę odniesień do dokumentacji modułu lub zewnętrznych dokumentów. Te listy są tworzone używając dyrektywy ``seealso``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The ``seealso`` directive is typically placed in a section just before any sub-sections.  For the HTML output, it is shown boxed off from the main flow of the text.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywa ``seealso`` jest typowo umieszczana w sekcji tuż przed jakąś pod-sekcją. Dla wyjścia HTML, to jest pokazane oddzielone od głównego przepływu tekstu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The content of the ``seealso`` directive should be a reST definition list. Example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Treść dyrektywy ``seealso`` powinna być listą definicji reST. Na przykład::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. seealso::     Module :mod:`zipfile`       Documentation of the :mod:`zipfile` standard module.     `GNU tar manual, Basic Tar Format &lt;http://link&gt;`_       Documentation for tar archive files, including GNU tar extensions.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. seealso:: Moduł :mod:`zipfile` Dokumentacja standardowego modułu :mod:`zipfile`. `podręcznik GNU tar, Podstawowy Format Tar &lt;http://link&gt;`_ Dokumentacja dla plików archiwum tar, zawierająca rozszerzenia GNU tar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive creates a paragraph heading that is not used to create a table of contents node.  It is currently used for the "Footnotes" caption.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa tworzy nagłówek paragrafu, który nie jest używany do tworzenia elementu spisu treści. Jest obecnie używany do fiszki "przypisów dolnych" </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive creates a centered boldfaced paragraph.  Use it as follows::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa tworzy wycentrowany pogrubiony paragraf. Używaj jej jak następuje::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. centered::     Paragraph contents.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. centered:: Treść paragrafu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Table-of-contents markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje spisu-treści</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Since reST does not have facilities to interconnect several documents, or split documents into multiple output files, Sphinx uses a custom directive to add relations between the single files the documentation is made of, as well as tables of contents.  The ``toctree`` directive is the central element.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Odkąd reST nie posiada urządzeń do łączenia wielu dokumentów, ani dzieleni dokumentów na wiele plików wyjściowych, Sphinx używa szczególnej dyrektywy do dodawania relacji pomiędzy pojedynczymi plikami z której składa się dokumentacja, tak jak spisów treści. Dyrektywa ``toctree`` jest centralnym elementem.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive inserts a "TOC tree" at the current location, using the individual TOCs (including "sub-TOC trees") of the files given in the directive body.  A numeric ``maxdepth`` option may be given to indicate the depth of the tree; by default, all levels are included.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa wstawia "drzewo TOC (spisu treści)" w obecnym położeniu, używając pojedynczych TOCów (zawierając "podrzędne-drzewa TOC") plików danych w treści dyrektywy. Numeryczna opcja ``maxdepth`` może być podana aby zaznaczyć głębokość drzewa; domyślnie wszystkie poziomy są załączone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Consider this example (taken from the library reference index)::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Rozważ ten przykład (wzięty z indeksu odniesień bibliotek)::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. toctree::    :maxdepth: 2     intro    strings    datatypes    numeric    (many more files listed here)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. toctree:: maxdepth: 2 ciągi początkowe typy-danych numeryczne (wiele więcej plików wypisanych tutaj)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This accomplishes two things:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To załatwia dwie rzeczy:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Tables of contents from all those files are inserted, with a maximum depth of two, that means one nested heading.  ``toctree`` directives in those files are also taken into account.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Spisy treści z tych wszystkich plików są wstawiane, z maksymalną głębokością dwóch, co oznacza jeden zagnieżdżony nagłówek. Dyrektywy ``toctree`` w tych plikach są także brane pod uwagę.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Sphinx knows that the relative order of the files ``intro``, ``strings`` and so forth, and it knows that they are children of the shown file, the library index.  From this information it generates "next chapter", "previous chapter" and "parent chapter" links.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sphinx zna zależny porządek plików ``intro``, ``strings`` itd. i wie że są dziećmi pokazanego pliku, indeksu bibliotecznego. Z tej informacji generuje odniesienia: "następny rozdział", "poprzedni rozdział" i "rozdział nadrzędny".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In the end, all files included in the build process must occur in one ``toctree`` directive; Sphinx will emit a warning if it finds a file that is not included, because that means that this file will not be reachable through standard navigation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>W końcu, wszystkie pliki załączone w procesie budowy muszą pojawić się w jednej dyrektywie ``toctree``; Sphinx wytworzy ostrzeżenie jeśli znajdzie plik który nie jest załączony, ponieważ to oznacza że ten plik nie będzie dostępny przez standardową nawigację.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The special file ``contents.rst`` at the root of the source directory is the "root" of the TOC tree hierarchy; from it the "Contents" page is generated.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Szczególny plik ``contents.rst`` u korzenia katalogu źródeł jest "korzeniem" hierarchii drzewa TOC (spisu treści); z niego strona "Treść" jest generowana.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Index-generating markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>adnotacje generujące-indeks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Sphinx automatically creates index entries from all information units (like functions, classes or attributes) like discussed before.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sphinx automatycznie tworzy wpisy indeksu ze wszystkich jednostek informacyjnych (takich jak zadania, uogólnienia, i właściwości) jak omówiono wcześniej.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>However, there is also an explicit directive available, to make the index more comprehensive and enable index entries in documents where information is not mainly contained in information units, such as the language reference.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jednakże, jest także jawna dyrektywa dostępna, aby uczynić indeks bardziej czytelnym i umożliwić wpisy indeksu w dokumentach gdzie informacja nie jest głównie zawarta w jednostkach informacji, takie jak odniesienia do języka.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The directive is ``index`` and contains one or more index entries.  Each entry consists of a type and a value, separated by a colon.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywą jest ``index`` i zawiera jedno lub więcej wpisów indeksu. Każdy wpis składa się z typu i wartości, oddzielonych dwukropkiem.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For example::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla przykładu::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. index::    single: execution; context    module: __main__    module: sys    triple: module; search; path</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. index::    single: execution; context    module: __main__    module: sys    triple: module; search; path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive contains five entries, which will be converted to entries in the generated index which link to the exact location of the index statement (or, in case of offline media, the corresponding page number).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa zawiera pięć wpisów, które będą konwertowane na wpisy w generowanym indeksie który łączy z dokładnym położeniem wyrażenia indeksu (lub w przypadku medium nie-sieciowego, odpowiadającemu numerowi strony).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The possible entry types are:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Możliwe rodzaje wpisów to:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Creates a single index entry.  Can be made a subentry by separating the subentry text with a semicolon (this notation is also used below to describe what entries are created).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Tworzy pojedynczy wpis indeksu. Może być uczynione podrzędnym wpisem przez oddzielenie tekstu wpisu podrzędnego za pomocą średnika (ta notacja jest także używana poniżej aby opisać które wpisy są tworzone).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``pair: loop; statement`` is a shortcut that creates two index entries, namely ``loop; statement`` and ``statement; loop``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``para: pętla; wyrażenie`` jest skrótem który tworzy dwa wpisy indeksu, ``pętla; wyrażenie`` i ``wyrażenie; pętla``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Likewise, ``triple: module; search; path`` is a shortcut that creates three index entries, which are ``module; search path``, ``search; path, module`` and ``path; module search``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Podobnie ``tryplet: moduł; szukanie; ścieżka`` jest skrótem który tworzy trzy wpisu indeksu, którymi są ``moduł; ścieżka poszukiwania``, ``poszukiwanie; ścieżka, moduł`` i ``ścieżka; poszukiwanie modułu``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These all create two index entries.  For example, ``module: hashlib`` creates the entries ``module; hashlib`` and ``hashlib; module``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te wszystkie tworzą dwa wpisy indeksu. Na przykład, ``moduł: hashlib`` tworzy wpisy ``moduł; hashlib`` i ``hashlib; moduł``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For index directives containing only "single" entries, there is a shorthand notation::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla dyrektyw indeksu zawierających tylko "pojedyncze" wpisy, istnieje skrótowa notacja::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. index:: BNF, grammar, syntax, notation</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. index: BNF, gramatyka, składnia, notacja</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This creates four index entries.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To tworzy cztery wpisy indeksu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Grammar production displays</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Pokazy produkcji gramatycznych</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Special markup is available for displaying the productions of a formal grammar. The markup is simple and does not attempt to model all aspects of BNF (or any derived forms), but provides enough to allow context-free grammars to be displayed in a way that causes uses of a symbol to be rendered as hyperlinks to the definition of the symbol.  There is this directive:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Szczególne adnotacje są dostępne dla pokazywania produkcji gramatyk formalnych. Adnotacje są proste i nie starają się modelować wszystkich aspektów BNF (ani żadnych form pochodnych), ale dostarczają dostatecznie aby pozwolić na gramatyki bez-kontekstowe aby były pokazywane w sposób który powoduje że użycie symbolu będzie pokazane jako hiperłącze do definicji tego symbolu. Oto jest ta dyrektywa:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This directive is used to enclose a group of productions.  Each production is given on a single line and consists of a name, separated by a colon from the following definition.  If the definition spans multiple lines, each continuation line must begin with a colon placed at the same column as in the first line.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ta dyrektywa jest używana do zamknięcia grupy produkcji gramatycznych. Każda produkcja jest dana w pojedynczej linii i składa się z nazwy, oddzielonej dwukropkiem od następującej po niej definicji. Jeśli definicja rozwija się na kilka linii, każda linia kontynuacji musi zaczynać się od dwukropka umieszczonego w tej samej kolumnie jak w pierwszej linii.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Blank lines are not allowed within ``productionlist`` directive arguments.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Puste linie nie są dozwolone wewnątrz parametrów dyrektywy ``productionlist``</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The definition can contain token names which are marked as interpreted text (e.g. ``unaryneg ::= "-" `integer```) -- this generates cross-references to the productions of these tokens.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Definicja może zawierać nazwy elementów które są oznaczone jako interpretowany tekst (np. ``unaryneg ::= "-" `integer```) -- to generuje krzyżowe-odniesienia do produkcji tych elementów.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Note that no further reST parsing is done in the production, so that you don't have to escape ``*`` or ``|`` characters.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zauważ, że żadne więcej przetwarzanie reST nie jest dokonywane w produkcji, tak że nie musisz ucieczkować znaków ``*`` lub ``|``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The following is an example taken from the Python Reference Manual::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Następujące są przykładami wziętymi z Podręcznika odniesień języka pytonowskiego::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. productionlist::    try_stmt: try1_stmt | try2_stmt    try1_stmt: "try" ":" `suite`             : ("except" [`expression` ["," `target`]] ":" `suite`)+             : ["else" ":" `suite`]             : ["finally" ":" `suite`]    try2_stmt: "try" ":" `suite`             : "finally" ":" `suite`</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. productionlist::    try_stmt: try1_stmt | try2_stmt    try1_stmt: "try" ":" `suite`             : ("except" [`expression` ["," `target`]] ":" `suite`)+             : ["else" ":" `suite`]             : ["finally" ":" `suite`]    try2_stmt: "try" ":" `suite`             : "finally" ":" `suite`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Substitutions</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Podstawienia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The documentation system provides three substitutions that are defined by default. They are set in the build configuration file :file:`conf.py`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>System dokumentacji dostarcza trzech podstawień które są zdefiniowane domyślnie. Są one ustawione w pliku konfiguracji budowania :file:`conf.py`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Replaced by the Python release the documentation refers to.  This is the full version string including alpha/beta/release candidate tags, e.g. ``2.5.2b3``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zamienione przez wydanie języka pytonowskiego do którego odnosi się dokumentacja. To jest ciąg znaków pełnej wersji zawierającej odnośnik alfa/beta/kandydata do wydania, na przykład: ``2.5.2b3``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Replaced by the Python version the documentation refers to. This consists only of the major and minor version parts, e.g. ``2.5``, even for version 2.5.1.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zamienione przez wersję języka pytonowskiego do której odnosi się dokumentacja. To składa się tylko z głównej i podrzędnej części wersji np. ``2.5`` nawet dla wersji 2.5.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Replaced by either today's date, or the date set in the build configuration file.  Normally has the format ``April 14, 2007``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zamieniane przez albo dzisiejszą datę, albo datę ustawioną w pliku konfiguracji budowy. Zwykle ma format ``Kwiecień 14, 2007``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Footnotes</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Uwagi końcowe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There is a standard ``.. include`` directive, but it raises errors if the file is not found.  This one only emits a warning.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieje standardowa dyrektywa ``.. include``, ale zgłasza ona błędy jeśli plik nie jest znaleziony. Ta tylko zgłasza ostrzeżenie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>reStructuredText Primer</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>reStructuredText Pierwszak</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This section is a brief introduction to reStructuredText (reST) concepts and syntax, intended to provide authors with enough information to author documents productively.  Since reST was designed to be a simple, unobtrusive markup language, this will not take too long.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ten rozdział jest krótkim wprowadzeniem do pojęć i składni (reST) reStructuredText, przeznaczonych dla zapewnienia autorom dość informacji dla autorstwa dokumentów w produktywny sposób. Ponieważ reST jest zaprojektowany aby być prostym, nieinwazyjnym językiem adnotacji, to nie zajmie długo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>See also</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zobacz też.:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The authoritative `reStructuredText User Documentation &lt;http://docutils.sourceforge.net/rst.html&gt;`_.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Autorytatywna `Dokumentacja reStructuredText &lt;http://docutils.sourceforge.net/rst.html&gt;`_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Paragraphs</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Paragrafy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The paragraph is the most basic block in a reST document.  Paragraphs are simply chunks of text separated by one or more blank lines.  As in Python, indentation is significant in reST, so all lines of the same paragraph must be left-aligned to the same level of indentation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ten paragraf jest najbardziej podstawowym blokiem w dokumencie reST. Paragrafy są prosto kawałkami tekstu oddzielonymi przez jedno lub więcej pustą linią. Jak w języku pytonowskim, wcięcie jest istotne w reST, więc wszystkie linie tego samego paragrafu muszą być wyrównane do lewej strony do tego samego poziomu wcięcia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The standard reST inline markup is quite simple: use</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Standardowa adnotacja w-jednej-linii reST jest całkiem prosta: użyj</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>one asterisk: ``*text*`` for emphasis (italics),</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>jednej gwiazdki : ``*tekst*`` dla uwydatnienia (italiki), </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>two asterisks: ``**text**`` for strong emphasis (boldface), and</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>dwóch gwiazdek: ``**tekst**`` dla głębokiego uwydatnienia (pogrubienia), i</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>backquotes: ````text```` for code samples.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>tylne cytaty: ````tekst```` dla przykładów kodu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If asterisks or backquotes appear in running text and could be confused with inline markup delimiters, they have to be escaped with a backslash.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli gwiazdki i tylne cytaty pojawiają się w ruchomym tekście i mogłyby być pomylone z ogranicznikach adnotacji w-jednej-linii, muszą być ucieczkowane skośnikiem.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Be aware of some restrictions of this markup:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Uważaj na pewne ograniczenia tych adnotacji:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>it may not be nested,</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nie mogą być zagnieżdżane,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>content may not start or end with whitespace: ``* text*`` is wrong,</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>treść nie może zaczynać się lub kończyć białymi znakami: ``* tekst*`` jest nieprawidłowe,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>it must be separated from surrounding text by non-word characters.  Use a backslash escaped space to work around that: ``thisis\ *one*\ word``.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>powinno być separowane od otaczającego tekstu przez nie-słowne znaki. Używaj skośnika ucieczkowanego odstępu aby to obejść ``tojest\ *jedno*\ słowo``.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>These restrictions may be lifted in future versions of the docutils.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Te ograniczenia mogą być uchylone w przyszłych wersjach docutils.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>reST also allows for custom "interpreted text roles"', which signify that the enclosed text should be interpreted in a specific way.  Sphinx uses this to provide semantic markup and cross-referencing of identifiers, as described in the appropriate section.  The general syntax is ``:rolename:`content```.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>reST także pozwala na szczególnie "interpretowane role tekstowe", które oznaczają że zawarty tekst powinien być interpretowany w szczególny sposób. Sphinx używa tego aby dostarczyć składniowe adnotacje i krzyżowe-odniesienia identyfikatorów, jak opisano w odpowiednich sekcjach. Ogólna składnia jest następująca: ``:nazwaroli:`treść```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Lists and Quotes</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Listy i Cytaty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>List markup is natural: just place an asterisk at the start of a paragraph and indent properly.  The same goes for numbered lists; they can also be autonumbered using a ``#`` sign::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Adnotacje list są zwyczajne: po prostu umieść znak gwiazdki na początku paragrafu i zrób odpowiednie wcięcie. To samo odnosi się do list ponumerowanych; mogą także być automatycznie ponumerowane używając znaku ``#``::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>* This is a bulleted list. * It has two items, the second   item uses two lines.  1. This is a numbered list. 2. It has two items too.  #. This is a numbered list. #. It has two items too.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>* To jest wypunktowana lista. * Ma dwa elementy, drugi element używa dwu linii. 1. To jest numerowana lista. 2 Ma także dwa elementy. #To jest numerowana lista. # Ma również dwa elementy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Nested lists are possible, but be aware that they must be separated from the parent list items by blank lines::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zagnieżdżone listy są możliwe, ale bądź świadomy, że muszą być odseparowane od elementów listy nadrzędnej przez puste linie::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>* this is * a list    * with a nested list   * and some subitems  * and here the parent list continues</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>* to jest * lista * z zagnieżdżoną listą * i pewnymi pod-elementami * a tu lista nadrzędna ciągnie się dalej</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Definition lists are created as follows::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Listy definicji są tworzone jak następuje::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>term (up to a line of text)    Definition of the term, which must be indented     and can even consist of multiple paragraphs  next term    Description.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>termin (do linii tekstu) Definicja terminu, która musi być wcięta i może składać się nawet z kilku paragrafów następnego Opisu terminu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Paragraphs are quoted by just indenting them more than the surrounding paragraphs.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Paragrafy są cytowane tylko przez wcięcie ich bardziej niż otaczające paragrafy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Source Code</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Kod źródłowy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Literal code blocks are introduced by ending a paragraph with the special marker ``::``.  The literal block must be indented::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Bloki literalnego kodu są wprowadzane przez zakończenie paragrafu specjalnym znacznikiem ``::``. Blok literalny musi być wcięty::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This is a normal text paragraph. The next paragraph is a code sample::     It is not processed in any way, except    that the indentation is removed.     It can span multiple lines.  This is a normal text paragraph again.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To jest zwykły paragraf tekstu. Następnym paragrafem jest przykład kodu:: Nie jest przetwarzany w żaden sposób, z wyjątkiem tego, że wcięcie jest zdejmowane. Może być podzielony na kilka linii. To jest znów paragraf zwykłego tekstu. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The handling of the ``::`` marker is smart:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Obsługa znacznika ``::`` jest sprytna:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If it occurs as a paragraph of its own, that paragraph is completely left out of the document.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli zdarzy się jako paragraf sam w sobie, ten paragraf zostanie kompletnie pominięty w dokumencie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If it is preceded by whitespace, the marker is removed.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli jest poprzedzony białym znakiem, znacznik jest usuwany</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If it is preceded by non-whitespace, the marker is replaced by a single colon.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jeśli jest poprzedzony nie-białym znakiem, znacznik jest zamieniany przez pojedynczy dwukropek.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>That way, the second sentence in the above example's first paragraph would be rendered as "The next paragraph is a code sample:".</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>W ten sposób drugie zdanie pierwszym paragrafie powyższego przykładu byłoby wypisane jako "Następnym paragrafem jest przykład kodu:".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Hyperlinks</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Hiperłącza</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>External links</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Łącza zewnętrzne</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Use ```Link text &lt;http://target&gt;`_`` for inline web links.  If the link text should be the web address, you don't need special markup at all, the parser finds links and mail addresses in ordinary text.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Użyj ```Tekst łącza &lt;http://cel&gt;`_`` dla w-jednej-linii łącz sieciowych. Jeśli tekst łącza powinien być adresem sieciowym, nie trzeba szczególnej adnotacji w ogóle, gdyż program wczytujący znajduje łącza i adresy pocztowe w zwykłym tekście.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Internal links</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wewnętrzne łącza</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Internal linking is done via a special reST role, see the section on specific markup, :ref:`doc-ref-role`.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wewnętrzne łączenie jest dokonywane przez specjalną rolę reST, zobacz rozdział o szczególnej adnotacji :ref:`doc-ref-role`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Sections</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Sekcje</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Section headers are created by underlining (and optionally overlining) the section title with a punctuation character, at least as long as the text::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nagłówki sekcji są tworzone przez podkreślenia (i opcjonalnie zakreślenia) tytułu rozdziału za pomocą znaku wypunktowania, przynajmniej tak długiego jak tekst::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>================= This is a heading =================</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>================= To jest nagłówek =================</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Normally, there are no heading levels assigned to certain characters as the structure is determined from the succession of headings.  However, for the Python documentation, we use this convention:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zwykle nie ma poziomów nagłówków przypisanych do konkretnych znaków jako, że struktura decyduje się w zależności od kolejności tych nagłówków. Jednakże dla dokumentacji języka pytonowskiego, używamy tej konwencji:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``#`` with overline, for parts</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``#`` z zakreśleniem, dla części</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``*`` with overline, for chapters</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``*`` z zakreśleniem, dla rozdziałów</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``=``, for sections</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``=``, dla sekcji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``-``, for subsections</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``-``, dla podsekcji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``^``, for subsubsections</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``^``, dla pod-podsekcji</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``"``, for paragraphs</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``"``, dla paragrafów</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Explicit Markup</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jawne adnotacje</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>"Explicit markup" is used in reST for most constructs that need special handling, such as footnotes, specially-highlighted paragraphs, comments, and generic directives.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>"Jawne adnotacje" są używane w reST dla większości konstrukcji, które wymagają szczególnego traktowania, takich jak uwagi końcowe, szczególnie-wyróżnione paragrafy, komentarze i dyrektywy generyczne.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>An explicit markup block begins with a line starting with ``..`` followed by whitespace and is terminated by the next paragraph at the same level of indentation.  (There needs to be a blank line between explicit markup and normal paragraphs.  This may all sound a bit complicated, but it is intuitive enough when you write it.)</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Jawny blok adnotacji zaczyna się od linii zaczynającej się na ``..`` po której następują białe znaki, i jest zakończona następnym paragrafem na tym samym poziomie wcięcia. (Istnieje potrzeba pustej linii pomiędzy jawnymi adnotacjami i zwykłymi paragrafami. To może brzmieć nieco skomplikowanie, ale jest intuicyjne dość gdy to piszesz.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Directives</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A directive is a generic block of explicit markup.  Besides roles, it is one of the extension mechanisms of reST, and Sphinx makes heavy use of it.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dyrektywa jest zastępczym blokiem jawnych adnotacji. Poza rolami, jest to jeden z mechanizmów rozszerzania reST, a Sphinx wiele razy z tego korzysta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Basically, a directive consists of a name, arguments, options and content. (Keep this terminology in mind, it is used in the next chapter describing custom directives.)  Looking at this example, ::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Zazwyczaj, dyrektywa składa się z nazwy, parametrów, opcji i treści. (Zapamiętaj tą terminologię, gdyż jest używana w następnym rozdziale opisującym szczególne dyrektywy.) Patrząc na ten przykład, ::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>.. function:: foo(x)               foo(y, z)    :bar: no     Return a line of text input from the user.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>.. function:: foo(x)               foo(y, z)    :bar: no     Zwróć linię tekstu wpisanego przez użytkownika.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>``function`` is the directive name.  It is given two arguments here, the remainder of the first line and the second line, as well as one option ``bar`` (as you can see, options are given in the lines immediately following the arguments and indicated by the colons).</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>``function`` ( - z ang. - ``zadanie``) -  jest nazwą dyrektywy. Występuje z dwoma parametrami, resztą pierwszej linii i drugą linią, i także jedną opcją ``bar`` (jak widać, opcje są podane w liniach natychmiast następujących po parametrach i zaznaczone przez dwukropki).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The directive content follows after a blank line and is indented relative to the directive start.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Treść dyrektywy podąża za pustą linią i jest wcięta względem początku dyrektywy.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For footnotes, use ``[#]_`` to mark the footnote location, and add the footnote body at the bottom of the document after a "Footnotes" rubric heading, like so::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla przypisów dolnych, używaj ``[#]_`` aby zaznaczyć położenie przypisu dolnego, i dodaj treść przypisu na dole dokumentu po nagłówku rubryki "Footnotes", tak jak::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Lorem ipsum [#]_ dolor sit amet ... [#]_  .. rubric:: Footnotes  .. [#] Text of the first footnote. .. [#] Text of the second footnote.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Lorem ipsum [#]_ dolor sit amet ... [#]_  .. rubric:: Footnotes  .. [#] Treść pierwszego przypisu dolnego. .. [#] Treść drugiego przypisu dolnego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You can also explicitly number the footnotes for better context.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Możesz także jawnie ponumerować przypisy dolne dla lepszego kontekstu.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Comments</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Komentarze</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Every explicit markup block which isn't a valid markup construct (like the footnotes above) is regarded as a comment.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Każdy jawny blok adnotacji który nie jest prawidłowym konstruktem adnotacji (tak jak przypisy powyżej) jest uważany za komentarz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Source encoding</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Kodowanie źródła</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Since the easiest way to include special characters like em dashes or copyright signs in reST is to directly write them as Unicode characters, one has to specify an encoding:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Ponieważ najłatwiejszym sposobem załączenia szczególnych znaków, jak kresek, lub znaków praw autorskich w reST jest sposób, aby zapisać je bezpośrednio jako znaki Unicode, dlatego trzeba określić kodowanie:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>All Python documentation source files must be in UTF-8 encoding, and the HTML documents written from them will be in that encoding as well.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wszystkie pliki źródłowe dokumentacji muszą być zakodowane w UTF-8, i dokumenty HTML zapisane z nich będą w tym kodowaniu także.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Gotchas</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Mamy-cia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>There are some problems one commonly runs into while authoring reST documents:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Istnieją pewne problemy na które można natknąć się zwykle gdy pisze się dokumenty w reST:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**Separation of inline markup:** As said above, inline markup spans must be separated from the surrounding text by non-word characters, you have to use an escaped space to get around that.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>**Separcja adnotacji w-jednej-linii:** Jak powiedziano powyżej, adnotacje w-jednej-linii muszą być odseparowane od otaczającego tekstu przez znaki nie-słów, trzeba użyć ucieczkowanego odstępu aby to obejść.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Style Guide</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przewodnik stylu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The Python documentation should follow the `Apple Publications Style Guide`_ wherever possible. This particular style guide was selected mostly because it seems reasonable and is easy to get online.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dokumentacja języka pytonowskiego powinna być zgodna ze `Przewodnikiem po stylu publikacji firmy Apple`_ gdzie tylko się da. Ten szczególny przewodnik po stylu został wybrany głównie ponieważ jest rozsądny i łatwo dostępny w sieci.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Topics which are not covered in Apple's style guide will be discussed in this document.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Tematy które nie są opisane w przewodniku po stylu firmy Apple będą opisane w tym dokumencie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>All reST files use an indentation of 3 spaces.  The maximum line length is 80 characters for normal text, but tables, deeply indented code samples and long links may extend beyond that.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wszystkie pliki reST używają wcięcia 3 odstępów. Maksymalna długość linii jest 80 znaków dla zwykłego tekstu, ale tabele, głęboko wcięte przykłady kodu i długie łącza mogą wychodzić ponad to.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Make generous use of blank lines where applicable; they help grouping things together.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Czyń hojny użytek z pustych linii gdzie to odpowiada potrzebom; pomagają grupować rzeczy razem.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A sentence-ending period may be followed by one or two spaces; while reST ignores the second space, it is customarily put in by some users, for example to aid Emacs' auto-fill mode.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Po kropce kończącej-zdanie mogą być użyte jeden lub dwa odstępy; podczas gdy reST ignoruje drugą spację, jest ona dodawana zwyczajowo przez niektórych użytkowników, dla przykładu, aby pomóc w trybie auto-uzupełniania w Emacs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Footnotes are generally discouraged, though they may be used when they are the best way to present specific information. When a footnote reference is added at the end of the sentence, it should follow the sentence-ending punctuation. The reST markup should appear something like this::</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przypisy dolne są zwykle odradzane, chociaż mogą być użyte, gdy są najlepszym sposobem aby zaprezentować pewne szczególne informacje. Gdy odniesienie do przypisu dolnego jest dodane na koniec zdania, powinno stosować się do znaków przestankowych końca zdania. Adnotacje reST powinno wyglądać następująco::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This sentence has a footnote reference. [#]_ This is the next sentence.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>To zdanie ma odniesienie do przypisów dolnych. [#]_ To jest następne zdanie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Footnotes should be gathered at the end of a file, or if the file is very long, at the end of a section. The docutils will automatically create backlinks to the footnote reference.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przypisy końcowe powinny być zgromadzone na koniec pliku, lub gdy plik jest bardzo długi, na koniec sekcji. Docutils automatycznie tworzy łącza powrotne do odniesienia przypisu dolnego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Footnotes may appear in the middle of sentences where appropriate.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Przypisy dolne mogą pojawić się w środku zdania gdzie jest to odpowiednie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Many special names are used in the Python documentation, including the names of operating systems, programming languages, standards bodies, and the like. Most of these entities are not assigned any special markup, but the preferred spellings are given here to aid authors in maintaining the consistency of presentation in the Python documentation.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Wiele specjalnych nazw jest używanych w dokumentacji języka pytonowskiego, włączając w to nazwy systemów operacyjnych, języków programowania, korpusy standardów itp. Większość z tych elementów nie jest oznaczona żadnymi specjalnymi adnotacjami, ale preferowane literowania dane są tu aby pomóc autorom w utrzymywaniu spójności prezentacji w dokumentacji języka pytonowskiego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Other terms and words deserve special mention as well; these conventions should be used to ensure consistency throughout the documentation:</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Inne terminy i słowa zasługują na wspomnienie także; te konwencje powinny być używane aby zapewnić spójność w całej dokumentacji:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>For "central processing unit." Many style guides say this should be spelled out on the first use (and if you must use it, do so!). For the Python documentation, this abbreviation should be avoided since there's no reasonable way to predict which occurrence will be the first seen by the reader. It is better to use the word "processor" instead.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Dla "centralnego elementu przetwarzania." ( - z ang. w skrócie - cpu - "central processing unit.") Wiele przewodników stylu mówi że to powinno być wymienione przy pierwszym użyciu (i jeśli musisz tego używać, rób to!). Dla dokumentacji języka pytonowskiego ten skrót powinien być omijany gdyż nie ma rozsądnego sposobu aby przewidzieć które wystąpienie będzie pierwszym widzianym przez czytającego. Lepiej jest użyć słowa "procesor" zamiast tego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name assigned to a particular group of standards. This is always uppercase.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa przydzielona szczególnej grupie standardów. To jest zawsze dużymi literami.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of our favorite programming language is always capitalized.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa naszego ulubionego języka programowania jest zawsze z dużej litery.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of a character set and matching encoding. This is always written capitalized.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa zbioru znaków i pasującego kodowania. To zawsze piszemy z dużej litery.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The name of the operating system developed at AT&amp;T Bell Labs in the early 1970s.</seg>
      </tuv>
      <tuv xml:lang="pl">
        <seg>Nazwa systemu operacyjnego wymyślonego w AT&amp;T laboratoriach Bell'a we wczesnych latach 1970-tych.</seg>
      </tuv>
    </tu>
  </body>
</tmx>
